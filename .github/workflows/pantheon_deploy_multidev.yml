name: Pantheon Deploy Multi-Dev

on:
  pull_request:
    branches:
      - main

jobs:
  deploy:
    if: startsWith(github.head_ref, 'feature/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ vars.PHP_VERSION }}

      - name: Settings Git global configs
        run: |
          git config --global pull.rebase false
          git config --global user.name "My CI Bot"
          git config --global user.email "ci@mydomain.com"

      - name: Add SSH Key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Disable Pantheon SSH strict host key checking
        run: 'printf "\nHost *\n\tStrictHostKeyChecking no" >> ~/.ssh/config'

      - name: Set up the Pantheon SSH remote
        run: |
          git remote add pantheon ${{ vars.PANTHEON_GIT_REMOTE }}
          echo $(git remote -v)
          echo PANTHEON_MULTIDEV=$(echo "pr-${{ github.event.pull_request.number }}") >> $GITHUB_ENV

      - name: Install Terminus
        uses: pantheon-systems/terminus-github-actions@main
        with:
          pantheon-machine-token: ${{ secrets.PANTHEON_MACHINE_TOKEN }}

      - name: Deploy to Pantheon Multi-Dev
        run: |
          git checkout -b $PANTHEON_MULTIDEV
          git push --force pantheon HEAD:refs/heads/$PANTHEON_MULTIDEV

      - name: Create or update Multi-Dev environment
        id: multi-dev
        run: terminus env:create ${{ vars.PANTHEON_SITE }}.${{ vars.PANTHEON_MULTIDEV_CLONE_ENV }} $PANTHEON_MULTIDEV || true
        continue-on-error: true

      - uses: mainmatter/continue-on-error-comment@v1.2
        with:
          test-id: Pantheon Multi-Dev Error
          outcome: ${{ steps.multi-dev.outcome }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: ouzi-dev/commit-status-updater@v2
        with:
          name: "Code Deployed"
          status: "${{ job.status }}"
          url: https://${{ env.PANTHEON_MULTIDEV }}-${{ vars.PANTHEON_SITE }}.pantheonsite.io
          description: "Code has been deployed to the Pantheon Multi-Dev environment."

      - name: Post to a Slack channel
        if: always()
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: '${{ vars.SLACK_CHANNEL }}'
          slack-message: "@${{ github.actor }} is pushing code today and it was a ${{ job.status }}!\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\nUsing Workflow: ${{ github.workflow }}\nPantheon: https://${{ env.PANTHEON_MULTIDEV }}-${{ vars.PANTHEON_SITE }}.pantheonsite.io"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
